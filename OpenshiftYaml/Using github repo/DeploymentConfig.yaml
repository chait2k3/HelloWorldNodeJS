kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://github.com/chait2k3/HelloWorldNodeJS.git'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/cc-uc-1-voyaging-coders/deploymentconfigs/hello-world-node-js-git
  resourceVersion: '7591201'
  name: hello-world-node-js-git
  uid: 47d75e26-2a6f-40a4-a359-cf671deb3284
  creationTimestamp: '2020-05-10T02:48:01Z'
  generation: 1
  namespace: cc-uc-1-voyaging-coders
  labels:
    app: hello-world-node-js-git
    app.kubernetes.io/component: hello-world-node-js-git
    app.kubernetes.io/instance: hello-world-node-js-git
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: hello-world-node-js-git-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 10-SCL
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - hello-world-node-js-git
        from:
          kind: ImageStreamTag
          namespace: cc-uc-1-voyaging-coders
          name: 'hello-world-node-js-git:latest'
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    app: hello-world-node-js-git
    deploymentconfig: hello-world-node-js-git
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hello-world-node-js-git
        deploymentconfig: hello-world-node-js-git
    spec:
      containers:
        - name: hello-world-node-js-git
          image: 'hello-world-node-js-git:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  latestVersion: 0
  observedGeneration: 1
  replicas: 0
  updatedReplicas: 0
  availableReplicas: 0
  unavailableReplicas: 0
  conditions:
    - type: Available
      status: 'False'
      lastUpdateTime: '2020-05-10T02:48:01Z'
      lastTransitionTime: '2020-05-10T02:48:01Z'
      message: Deployment config does not have minimum availability.
